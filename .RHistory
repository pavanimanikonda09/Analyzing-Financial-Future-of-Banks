#arithmetic operators
v<-c(2,5.5,6)
t<-c(8,3,4)
print(v+t)
#arithmetic operators
v<-c(2,5.5,6)
t<-c(8,3,4)
print(v+t)
print(v-t)
print(v*t)
print(v/t)
print(v%%t)
print(v^t)
print(v>t)
print(v<t)
print(v==t)
print(v>=t)
print(v<=t)
print(v!=t)
v<-c(3,1,TRUE,2+3i)
t<-c(4,1,FALSE,2+3i)
print(v&t)
print(v|t)
v<-c(3,1,TRUE,2+3i)
t<-c(4,1,FALSE,2+3i)
print(v&t)
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign(mark,33,40,38,29,32)
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",33,40,38,29,32)
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",33)
assign("mark",39)
assign("mark",27)
assign("mark",36)
assign("mark",22)
print(mark)
print(mark[3])
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(33,40,29,36,31))
print(mark)
print(mark[3])
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(29,40,35,36,31))
print(mark)
print(mark[3])
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(29,40,35,36,31))
print(mark)
print(mark[3])
details<-data.frame(student,mark)
print(details)
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(29,40,35,36,31))
print(mark)
print(mark[3])
details<-data.frame(student,mark)
print(details)
print(student[which.min(details$mark)])
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
details<-data.frame(student,mark)
print(details)
print(student[which.min(details$mark)])
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
print(student[which.min(details$mark)])
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
printf("student who scored min marks %s : %d",student[which.min(details$mark)],mark[which.min(details$mark)])
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
print(paste("student who scored min marks",student[which.min(details$mark)]))
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
print(paste("student who scored min marks is",student[which.min(details$mark)],mark[which.min(details$mark)]))
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
print(paste("student who scored min marks is",student[which.min(details$mark)],mark[which.min(details$mark)]))
#total marks
print(paste(sum(mark)))
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
#min marks
print(paste("student who scored min marks is",student[which.min(details$mark)],mark[which.min(details$mark)]))
#max marks
print(paste("student who scored max marks is",student[which.max(details$mark)],mark[which.max(details$mark)]))
#total marks
print(paste("total marks scored by all the student are",sum(mark)))
mean(details$mark)
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
#min marks
print(paste("student who scored min marks is",student[which.min(details$mark)],mark[which.min(details$mark)]))
#max marks
print(paste("student who scored max marks is",student[which.max(details$mark)],mark[which.max(details$mark)]))
#total marks
print(paste("total marks scored by all the student are",sum(mark)))
#mean marks
mean(details$mark)
#standerd devation
sd(details$mark)
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
#min marks
print(paste("student who scored min marks is",student[which.min(details$mark)],mark[which.min(details$mark)]))
#max marks
print(paste("student who scored max marks is",student[which.max(details$mark)],mark[which.max(details$mark)]))
#total marks
print(paste("total marks scored by all the student are",sum(mark)))
#mean marks
mean(details$mark)
#standard deviation
print("standard deviation is: ")
sd(details$mark)
#sorting in asc
sort(mark)
students<-3*(student)
#
students<-(student)
#
students<-(student)
print(students)
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
assign("mark",c(39,20,35,36,31))
print(mark)
print(mark[3])
#combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
print(length(det))
print(details)
#min marks
print(paste("student who scored min marks is",student[which.min(details$mark)],mark[which.min(details$mark)]))
#max marks
print(paste("student who scored max marks is",student[which.max(details$mark)],mark[which.max(details$mark)]))
#total marks
print(paste("total marks scored by all the student are",sum(mark)))
#mean marks
mean(details$mark)
#standard deviation
print("standard deviation is: ")
sd(details$mark)
#sorting in asc
sort(mark)
#
students<-c(3*student)
#
students<-3*c(student)
students<-c(student,student,student)
print(students)
#
students<-c(student,student,student)
print(students)
students<-rep(student,times=3)
print(students)
#
students<-c(student,student,student)
print(students)
students<-rep(student,times=2)
print(students)
students<-c(student,student,student)
print(students)
students<-rep(student,times=3)
print(students)
marks<-rep(mark,each=2)
print(marks)
x<-10:1
print(x)
com<-c(marks,x)
print(com)
x<-10:1
print(x)
print(x+marks)
mark<-c(79,60,50,89,45,91,93,56)
list<-marks>70
print(list)
mark<-c(79,60,50,89,45,91,93,56)
list<-(mark>70)
print(list)
clear
#1
student<-c("Rahul","Rohith","Vamsi","Amith","Lucky")
#2
assign("mark",c(39,20,35,36,31))
print(mark)
#3
print(mark[3])
#4combining the vectors
details<-data.frame(student,mark)
det<-c(student,mark)
#5
print(length(det))
print(details)
#6 min marks
print(paste("student who scored min marks is",student[which.min(details$mark)],mark[which.min(details$mark)]))
#7 max marks
print(paste("student who scored max marks is",student[which.max(details$mark)],mark[which.max(details$mark)]))
#8 total marks
print(paste("total marks scored by all the student are",sum(mark)))
#9 mean marks
mean(details$mark)
#10 standard deviation
print("standard deviation is: ")
sd(details$mark)
#11sorting in asc
sort(mark)
#12
students<-c(student,student,student)
print(students)
students<-rep(student,times=3)
print(students)
#13
marks<-rep(mark,each=2)
print(marks)
#14
x<-10:1
print(x)
print(x+marks)
#15
mark<-c(79,60,50,89,45,91,93,56)
list<-(mark>70)
print(list)
#Create a data frame by considering 5 students and 4 events. Each event has a maximum
#score of 10. If a student participates in an event, its entry contains the score value and 0 otherwise.
data <- data.frame(
student = c("Rahul","vamsi","rohith","amith","santosh"),
event1 = c(9,0,0,8,10),
event2 = c(10,9,7,0,8),
event3 = c(8,9,10,8,9),
event4 = c(10,9,10,8,0)
)
#View the contents of the data frame.
data
summary(data)
#. Find the total score of each participant.
print(rowSums(data[,c(2:5)]))
#Append a column to include the total score of the participants and view the data frame.
data$sum<- rowSums(data[,c(2:5)])
data
#Find the maximum score and display the name of the participant who scored it.
print(data$student[which.max(data$sum)])
# Compute the average score of each events and append it as a new row in the data frame.
data$avg<- rowMeans(data[,c(2:5)])
data
#Create a data frame by considering 5 students and 4 events. Each event has a maximum
#score of 10. If a student participates in an event, its entry contains the score value and 0 otherwise.
data <- data.frame(
student = c("Rahul","vamsi","rohith","amith","santosh"),
event1 = c(9,0,0,8,10),
event2 = c(10,9,7,0,8),
event3 = c(8,9,10,8,9),
event4 = c(10,9,10,8,0)
)
#View the contents of the data frame.
data
summary(data)
#. Find the total score of each participant.
print(rowSums(data[,c(2:5)]))
#Append a column to include the total score of the participants and view the data frame.
data$sum<- rowSums(data[,c(2:5)])
data
#Find the maximum score and display the name of the participant who scored it.
print(data$student[which.max(data$sum)])
# Compute the average score of each events and append it as a new row in the data frame.
data$avg<- rowMeans(data[,c(2:5)])
data
#Store the details in a comma separated values (csv) file. Also suppress the row numbers.
write.csv(data,"E:\\sem 5\\iwp\\event.csv", row.names = FALSE)
#Read the content of ‘Events.csv’ in a data frame and view it
getwd()
set.seed("E:\sem 5\iwp")
#Read the content of ‘Events.csv’ in a data frame and view it
getwd()
set.seed("E:/sem 5/wp")
#Read the content of ‘Events.csv’ in a data frame and view it
getwd()
set.seed("E:\\sem 5\\iwp")
library(shiny); runApp('E:/sem5/fda/r project/shiny_app_prac.R')
library(shiny); runApp('E:/sem5/fda/r project/shiny_app_prac.R')
library(shiny); runApp('E:/sem5/fda/r project/shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
Y
runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('TARP.R')
library(shiny); runApp('TARP.R')
runApp('TARP.R')
library(shiny); runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
runApp('shiny_app_prac.R')
library(shiny); runApp('shiny_app_prac.R')
